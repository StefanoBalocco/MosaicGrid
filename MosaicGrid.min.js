"use strict";var MosaicGrid;!function(t){class i{constructor(t){this.t=0,this.i=0,this.s=document.getElementById(t.containerId),this.o=t.contentClass,this.h=t.itemClass,this.s&&(this.t=parseFloat(window.getComputedStyle(this.s).getPropertyValue("grid-auto-rows")),this.i=parseFloat(window.getComputedStyle(this.s).getPropertyValue("grid-row-gap"))),window.addEventListener("resize",()=>{this.ResizeItems()}),this.ResizeItems()}ResizeItem(t){if(0<this.t+this.i){const i=t.getElementsByClassName(this.o);if(i&&1===i.length){let s=parseFloat(window.getComputedStyle(t).getPropertyValue("border-top-width"));s+=parseFloat(window.getComputedStyle(t).getPropertyValue("border-bottom-width")),s+=i[0].getBoundingClientRect().height,t.style.gridRowEnd="span "+Math.ceil((s+this.i)/(this.t+this.i))}}}ResizeItems(){if(this.s){const t=this.s.getElementsByClassName(this.h),i=t.length;for(let s=0;s<i;s++){const i=t[s];this.ResizeItem(i);const o=i.getElementsByTagName("img");if(0<o.length){const t=o.length;for(let s=0;s<t;s++)if(!o[s].complete){new Promise(t=>{o[s].onload=()=>{t(i)},o[s].onerror=()=>{t(i)},o[s].complete&&t(i)}).then(t=>{this.ResizeItem(t)}).catch(()=>{})}}}}}}t.Create=function(t){return new i(t)}}(MosaicGrid||(MosaicGrid={}));