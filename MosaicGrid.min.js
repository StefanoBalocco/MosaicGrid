"use strict";var MosaicGrid;!function(t){class i{constructor(t,i,s){this.t=0,this.i=0,this.s=document.getElementById(t),this.o=s,this.h=i,this.l=()=>{this.ResizeItems},this.s&&(window.addEventListener("resize",this.l),this.ResizeItems())}Destroy(){window.removeEventListener("resize",this.l),this.s=null}ResizeItem(t){const i=t.getElementsByTagName("img");if(0<i.length){const s=i.length;for(let o=0;o<s;o++)if(!i[o].complete){new Promise(s=>{i[o].onload=()=>{s(t)},i[o].onerror=()=>{s(t)},i[o].complete&&s(t)}).then(t=>{this.ResizeItem(t)}).catch(()=>{})}}if(0<this.t+this.i){const i=t.getElementsByClassName(this.o);if(i&&1===i.length){let s=parseFloat(window.getComputedStyle(t).getPropertyValue("border-top-width"));s+=parseFloat(window.getComputedStyle(t).getPropertyValue("border-bottom-width")),s+=i[0].getBoundingClientRect().height,t.style.gridRowEnd="span "+Math.ceil((s+this.i)/(this.t+this.i))}}}ResizeItems(){if(this.s){this.t=parseFloat(window.getComputedStyle(this.s).getPropertyValue("grid-auto-rows")),this.i=parseFloat(window.getComputedStyle(this.s).getPropertyValue("grid-row-gap"));const t=this.s.getElementsByClassName(this.h),i=t.length;for(let s=0;s<i;s++){const i=t[s];this.ResizeItem(i)}}}AppendItems(t){if(this.s){const i=t.length;for(let s=0;s<i;s++){const i=this.s.appendChild(t[s]);this.ResizeItem(i)}}}PrependItems(t){if(this.s)if(0<this.s.childNodes.length){const i=t.length;for(let s=0;s<i;s++){const i=this.s.insertBefore(t[s],this.s.childNodes[0]);this.ResizeItem(i)}}else this.AppendItems(t)}}t.Create=function(t){return new i(t.containerId,t.itemClass,t.contentClass)}}(MosaicGrid||(MosaicGrid={}));